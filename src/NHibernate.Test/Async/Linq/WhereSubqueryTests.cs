//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Linq;
using System.Linq.Expressions;
using NHibernate.DomainModel.Northwind.Entities;
using NUnit.Framework;

namespace NHibernate.Test.Linq
{
	using System.Threading.Tasks;
	[TestFixture]
	public class WhereSubqueryTestsAsync : LinqTestCase
	{

		[Test(Description = "NH-3002")]
		public async Task HqlOrderLinesWithInnerJoinAndSubQueryAsync()
		{
			var lines = await (session.CreateQuery(@"select c from OrderLine c
join c.Order o
where o.Customer.CustomerId = 'VINET'
	and not exists (from c.Order.Employee.Subordinates x where x.EmployeeId = 100)
").ListAsync<OrderLine>());

			Assert.That(lines.Count, Is.EqualTo(10));
		}

		[Test(Description = "NH-3002")]
		public async Task HqlOrderLinesWithImpliedJoinAndSubQueryAsync()
		{
			var lines = await (session.CreateQuery(@"from OrderLine c
where c.Order.Customer.CustomerId = 'VINET'
	and not exists (from c.Order.Employee.Subordinates x where x.EmployeeId = 100)
").ListAsync<OrderLine>());

			Assert.That(lines.Count, Is.EqualTo(10));
		}

		private class Pr2
		{
			public int ReorderLevel { get; set; }
		}

		private class Pr1
		{
			public string Name { get; set; }
			public Pr2 Pr2 { get; set; }
		}
	}
}
